# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    deploy-staging:
        docker:
            - image: circleci/node:7.10
        working_directory: ~/src

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: npm install

            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}

            - run:
                  name: Install awscli
                  command: sudo apt-get install awscli

            - run:
                  name: Deploy src files to S3
                  command: aws s3 sync src/ s3://everlytic-push-notifications-sdk-web
    deploy-master:
        docker:
            - image: circleci/node:7.10
        working_directory: ~/src

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: npm install

            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}

            - run:
                  name: Install awscli
                  command: sudo apt-get install awscli

            - run: npm run-script build

            - run:
                  name: Deploy min files to S3
                  command: aws s3 sync dist/ s3://everlytic-push-notifications-sdk-web
workflows:
    version: 2
    build-deploy-staging:
        jobs:
            - deploy-staging:
                  requires:
                      - build
                  filters:
                      branches:
                          only: staging
    build-deploy-master:
        jobs:
            - deploy-master:
                  requires:
                      - build
                  filters:
                      branches:
                          only: master